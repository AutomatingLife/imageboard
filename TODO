RANDOM SHIT DISREGARD
  - [x] permission checks in helpers/checks/actionchecker.js
  - [x] permission bypasses in helpers/schema.js, and edit controllers schema check perm levels to new Permissions.XXX
  - [x] helpers/posting/markdown.js markdown permission levels, and in binded custom callback markdowns like diceroll, linkmatch, etc
  - [x] remove permLevels, permLevels.markdown, the global settings for it, the controller code for checking it, and put a bit of the template into the migrations
  - [x] helpers/decodequeryip.js for ip query decoding, and handle the iphashpermlevel stuff
  - [x] make sure a valid permission always passed to markdown. make note about bug for moving, and permission on other posts when getting remarked.
  - [x] helpers/posting/message.js, argument permlevel, and passing to markdown function (and other places like editing and moving!)
  - [x] helpers/checks/spamcheck.js, for BYPASS_SPAMCHECKS
  - [x] helpers/checks/bancheck.js, for BYPASS_BANS or BOARD_MANAGE_OWNER/GENERAL, for board bans
  - [x] helpers/checks/calcpermsmiddleware.js, make it return the Permission instance, not return and set res.locals.permLevel
  - [x] remove ipHashPermLevel, use the permission. remove from template.js, globalmanage, controller, etc
  - [x] remove permLevel bypass in imagehash helper
  - [x] helpers/posting/name.js, to emulate old "levels" for capcodes
  - [x] per-board permissions page, to show a users permissions
  - [x] global permissions page /permissions.html
  - [x] remove authLevel from models/pages/account.js
  - [x] update account.html, to show only the pages you are able to access in the quick links
  - [x] redo whole permissions check in socketio.js, to use calcPerms (and hasPerms? or a separate check)
  - [x] fix permissions check in views/mixins/managenav.pug, and make it all more like account.pug
  - [x] remove unnecessary board_owner check in page controllers, since they inherit all othe board perms
  - [x] link in board staff table, by clicking aand "edit" of the permission base64, to /board/manage/editstaff/username.html,
  - [x] remove permissions fluff from FAQ, that shit doesnt need to be there
  - [x] rename addModBoard removeModBoard, getOwnedOrModBoards, modBoards, rename mod to "staff"
  - [x] db migration, modBoards to staffBoards
  - [x] create db/boards addStaff method, unused yet, 
  - [x] update removeStaffBoard to handle staff object instead of moderators, change those db methods to be called "staff" not "moderators"
  - [x] change board "moderators" array, rename "staff" and make it a map of {username:{permissions, dateAdded, etc}}
  - [x] add forms to add and delete staff from a board, using new staff methods in db/boards and db/accounts
  - [x] add new page /board/manage/editstaff/username.html accessible with MANAGE_BOARD_STAFF, showing the permissions for that user ON THAT BOARD (the board_ stuff only basically)
  - [x] link in accounts table, by clicking and "edit" of the permission base64, to /globalmanage/editpermissions/account_id.html,
  - [x] add permisions default template to newly created accounts under permissions.
  - [x] finally remove authLevel from helpers/checks/calcperms.js once the data is in the db
  - [x] update setting authLevel in db/accounts.js, since it should just be permissions data now
  - [x] add permtemplates to accounts with migration, based on authlevel, then UNSET auth level
  - [x] remove deleteBoardsPermLevel, use ther permission (permissions already checked on the endpoint, so remove from template.js, globalmanage, controller, etc
  - [x] remove authLevelNames
  - [x] controllers/forms/editstaff.js models/forms/editstaff.js
  - [x] fix inheriting board staff perms in calcperms
  - [x] adapt controllers/forms/editaccount.js models/forms/editaccount.js to ACCOUNTS, instead of STAFF!
  - [x] do another grep for permLevel and authLevel, userBoardCreation, userAccountCreation, ipHashPermLevel, etc
  - [x] add new setting "dont store raw ips" instead of based on "-1" ipHashPermLevel which is now removed.
  - [x] remove "allow user board creation" and "allow user account creation" in global settings, since it should be part of editing the default/anon users permission template
  - [x] make sure staff/acount adding and removing stays consistent
  - [x] change bunch permLevel comparisons, esp in models/forms/makepost. to use the perms, or just a combo of some perm like manage_board_general/manage_global_general
  - [x] finish migration
  - [x] get permissions for multiple boards in account page, to show the proper links for staff and all the links can be available in "boards you own" vs "moderate", depending on their staff permissions
  - [x] add some "edit" link and edit account "upgrade"-type buttons, like the local->global post history links (where permssions allow)
  - [x] add some "friendly" permission names and descriptions for permissions.toJSON, mostly for frontend, and will be good for translation later
  - [x] make permission class better, static allPermissions and permissionEntries
  - [x] make BOs show up properly in edit staff, controller check to prevent editing them
  - [~] make at least the ANON template editable with MANAGE_GLOBAL_ACCOUNTS. can store in globalsettings for now, since there are only the default 5 (for now)
  - [~] implement showing "template name" or "custom", based on id a permission is one of the templates or not
  - [ ] update nginx config
Improvements for later
  - [ ] update jschan-docs. add a section about accounts, staff and permissions.
  - [ ] !!explore options for permission changes applying to users when a template is updated. e.g. change the anon template to add the CREATE_BOARD, but an existing user (who does not have this permission) doesnt get it added to their account. I think use mongo $bitsAllSet+$bitsAllClear works for this (since the binary is stored), and then set the new permission binary. for missing ADDED permissions, inheriting from anon could be a good interim solution, but needs to be properly changed to handle the inverse properly.
  - [ ] permission editing page to mass update or apply a change to multiple users just for specific permissions, not a full overwrite. maybe a page with options "dont change, set to false, set to true"? 
  - [ ] full on ability to add custom templates for roles, and 
